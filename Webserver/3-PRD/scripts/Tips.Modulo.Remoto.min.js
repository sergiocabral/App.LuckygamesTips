window.Tips=window.Tips||{},window.Tips.Modulos&&(window.Tips.Modulos.Remoto=window.Tips.Modulos.Remoto||new function(){const Instancia=window.Tips,Modulo=this;Modulo.Inicializar=(()=>{Instancia.Layout.AdicionarSecao(Modulo.Secao)}),Modulo.Objetos={},Modulo.Secao={versao:"v1",titulo:"Remoto",css:"\n            :host div {\n                width: 100%;\n                background-color: black;\n                color: lightgreen;\n                font-family: monospace;\n                white-space: pre;\n                height: 150px;\n                overflow: auto;\n                margin-top: 0;\n                border: 1px solid darkgreen;\n                padding: 10px;\n                width: calc(100% - 33px);\n                background-color: darkslategrey;\n                margin-left: 5px;\n            }\n            ",html:"<div></div>",js:container=>{Modulo.Objetos.log=container.find("div").get(0),Modulo.Escutar(),window.addEventListener("BotZerou",()=>{const saldo=Tips.LuckygamesIo.Parametros.Balance();(!Number.isFinite(Modulo.Parametros.saldoMinimo)||saldo<=Modulo.Parametros.saldoMinimo)&&Modulo.PararTudoNoServidor()}),Modulo.Log("Iniciada automação pelo servidor.","info")}},Modulo.Log=((mensagem,tipo)=>{if(Modulo.Parametros.ultimoLog==mensagem+tipo)return;Modulo.Parametros.ultimoLog=mensagem+tipo;const string=`[${(new Date).formatado()}] ${mensagem}`;Modulo.Objetos.log.innerHTML=string+"\n"+Modulo.Objetos.log.innerHTML,Instancia.Geral.Toast(mensagem,tipo)}),Modulo.Config={intervalo:1e3,intervaloSemComunicacao:1e4,usuario:Tips.LuckygamesIo.Parametros.Usuario().toLowerCase().trim(),moeda:Instancia.LuckygamesIo.Parametros.Moeda(),bot:null},Modulo.Escutar=(()=>{if(Modulo.Parametros.parado)return;const recarregar=()=>Modulo.Parametros.idTimeoutEscuta=setTimeout(Modulo.Escutar,Modulo.Config.intervalo);Instancia.Api.Comando("Util/Flag",{}).then(response=>{try{const dados=response.erro?null:response.response.dados;if(!dados||"object"!=typeof dados)throw new Error("dados incorretos");Modulo.Processar(dados)}catch(error){Modulo.Log("Erro nos dados recebidos do servidor."),console.log("Erro de dados ou lógico:",error)}recarregar()}).catch(error=>{Modulo.Log("Erro na conexão com o servidor. "+error,"error"),console.log("Erro de rede:",error),recarregar()})}),Modulo.PararBots=(()=>(console.logg("Remoto: parar"),"Martin"==Modulo.Config.bot&&(btn=Instancia.Modulos.MartinBot.Objetos.$btnLigar),"Raw"==Modulo.Config.bot&&(btn=Instancia.Modulos.RawBot.Objetos.$controleBtnLigar),"none"!==btn.get(0).style.display&&("Desligar"==btn.text()&&btn.click(),Modulo.Log(`Bot ${bot} interrompido.`,"info"),console.logg("Remoto: parado!"),!0))),Modulo.PararTudo=(()=>{const pararBots=()=>{Modulo.PararBots()?Modulo.Parametros.processamentoIniciado=!1:setTimeout(pararBots,1e3)};pararBots(),Modulo.Parametros.parado=!0,Modulo.Log("Automação foi desligada pelo cliente por falta de comunicação com o servidor.","warning")}),Modulo.Processar=(dados=>{if(clearTimeout(Modulo.Parametros.idTimeoutPararTudo),dados.parar)return Modulo.Log("A automação foi desligada no servidor.","warning"),void Modulo.PararTudo();Modulo.Parametros.idTimeoutPararTudo=setTimeout(Modulo.PararTudo,Modulo.Config.intervaloSemComunicacao);const automacao=dados.groups.reduce((a,c)=>a=null==a&&!c.ignorar&&c.usuarios.map(v=>v.toLowerCase().trim()).indexOf(Modulo.Config.usuario)>=0?c:a,null);if(automacao){if(Modulo.Config.bot=automacao.bot,automacao.saldoMinimo){let saldoMinimo=parseFloat(String(automacao.saldoMinimo).replace(",","."))/100;saldoMinimo*=Tips.LuckygamesIo.Parametros.Balance(),Modulo.Parametros.saldoMinimo>saldoMinimo||(Modulo.Parametros.saldoMinimo=saldoMinimo)}if(automacao.relatorio&&Modulo.EnviarRelatorio(),automacao.atualizar)return location.reload(),Modulo.Log("Atualizando página.","warning"),void(Modulo.Parametros.parado=!0);if(automacao.moeda.toLowerCase()!=Modulo.Config.moeda.toLowerCase())return location.href=location.origin+"?coin="+automacao.moeda.toLowerCase(),Modulo.Log("Trocando moedas. Atualizando página.","warning"),void(Modulo.Parametros.parado=!0);if(Modulo.Parametros.id=automacao.id,automacao.mensagem&&automacao.mensagem!==Modulo.Parametros.ultimaMensagem&&(Modulo.Parametros.ultimaMensagem=automacao.mensagem,Modulo.Log("SERVIDOR DIZ: "+automacao.mensagem,"info")),automacao.script){const scriptStr=JSON.stringify(automacao.script);if(!automacao.ligado||scriptStr==Modulo.Parametros.ultimoScript&&Modulo.Parametros.processamentoIniciado)!automacao.ligado&&Modulo.Parametros.processamentoIniciado&&Modulo.PararBots()&&(Modulo.Parametros.ultimoScript="",Modulo.Parametros.processamentoIniciado=!1);else{Modulo.Parametros.ultimoScript=scriptStr;const json=Instancia.Modulos.Parametros.Parametros.ArrayStringToJson(automacao.script);Instancia.Modulos.Parametros.Parametros.AplicarNaTela(json),Modulo.Parametros.processamentoIniciado||(Instancia.Modulos.Parametros.Comandos.AbrirJanela(),"Martin"==Modulo.Config.bot&&Instancia.Modulos.Parametros.Comandos.LigarBotMarin(),"Raw"==Modulo.Config.bot&&Instancia.Modulos.Parametros.Comandos.LigarBotRaw(),Instancia.Modulos.Parametros.Comandos.AbrirEstatisticas(),Modulo.Parametros.processamentoIniciado=!0),console.logg("Remoto: aplicado script")}console.logg("Remoto: loop")}}}),Modulo.Parametros={idTimeoutEscuta:0,idTimeoutPararTudo:0,parado:!1,ultimaMensagem:"",processamentoIniciado:!1,id:null,ultimoRelatorio:null,saldoMinimo:null},Modulo.PararTudoNoServidor=(()=>{if(Modulo.Parametros.processamentoIniciado&&Modulo.Parametros.id){Instancia.Api.Comando("Util/Flag/Desligar",{data:{id:Modulo.Parametros.id}});const assunto="Luckygames.tips - Controle remoto parado",mensagem=Instancia.Geral.FormatarString('Usuário: <strong>{0}</strong><br/>Moeda: <strong>{1}</strong><br/>Saldo atual: <strong>{2}</strong><br/><br/>Esta instância solicitou parada do controle remoto "<strong>{3}</strong>".',Instancia.LuckygamesIo.Parametros.Usuario(),Instancia.LuckygamesIo.Parametros.Moeda(),Instancia.Estatisticas.Dados.Formatado.SaldoAtual(),Modulo.Parametros.id);Instancia.Api.Email(Instancia.Api.Licenca().email,assunto,mensagem).then(data=>{if(data&&data.sucesso&&data.response&&!data.response.erro)Instancia.Geral.Toast(`Um e-mail foi enviado informado que foi solicitada a parada do controle remoto "${Modulo.Parametros.id}".`,"info");else{const erro=data&&data.response&&data.response.mensagem?": "+data.response.mensagem:".";Instancia.Geral.Toast("Ocorreu um erro ao enviar o e-mail de notificação"+erro,"error")}})}}),Modulo.EnviarRelatorio=(()=>{const saldo=Tips.LuckygamesIo.Parametros.Balance();saldo!=Modulo.Parametros.ultimoRelatorio&&(Modulo.Parametros.ultimoRelatorio=saldo,console.logg("Remoto: enviando relatório"),Instancia.Api.Comando("Util/Flag/Relatorio/Enviar",{data:{usuario:Instancia.LuckygamesIo.Parametros.Usuario(),saldo:Instancia.Estatisticas.Dados.Formatado.SaldoAtual(),moeda:Instancia.LuckygamesIo.Parametros.Moeda(),percentual:Tips.Modulos.Estatisticas.Objetos.lucroApostasPercentual.innerText}}).catch(error=>{Modulo.Parametros.ultimoRelatorio="",Modulo.Log("Erro ao enviar relatório. "+error)}))})});