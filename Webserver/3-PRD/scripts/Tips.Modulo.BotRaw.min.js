window.Tips=window.Tips||{},window.Tips.Modulos&&(window.Tips.Modulos.RawBot=window.Tips.Modulos.RawBot||new function(){const Instancia=window.Tips,Modulo=this;Modulo.Inicializar=(()=>{Instancia.BotConstrutor.ImplementarLigaDesliga(Modulo,Modulo.Parametros.Processar),Instancia.Layout.AdicionarSecao(Modulo.Secao)}),Modulo.Objetos={},Modulo.Secao={versao:"v2",titulo:"BOT Raw",css:"\n                :host .label label {\n                    left: 0;\n                }\n                :host table.base input[number] {\n                    max-width: 100px;\n                }\n                :host .mitigar .riscoTemporario input.risco,\n                :host .turbo input.risco,\n                :host .mitigar .turboAleatorio input,\n                :host .turbo input.aleatorio {\n                    width: 80px;\n                }\n                :host .mitigar .riscoTemporario input.tempo,\n                :host .turbo input.tempo {\n                    width: 50px;\n                }\n                :host .turbo {\n                    text-align: left;\n                }\n                :host .turbo .label {\n                    position: relative;\n                    top: 2px;\n                    left: 7px;\n                }\n                {componenteQuantoArriscar}\n            ".replace("{componenteQuantoArriscar}",Instancia.BotConstrutor.ComponenteQuantoArriscar(Modulo,"css")),html:'\n                <p class="info">\n                    Quanto mais perde mais ganha.\n                    Mas se perder demais realmente perde todo o valor arriscado.\n                    Os parâmetros são configurados pelo código-fonte.\n                </p>\n                {componenteQuantoArriscar}\n                <div class="divisor"></div>\n                <table class="base">\n                    <tr>\n                        <td class="label"><label>Prediction</label></td>\n                        <td class="prediction"><input type="text" number number-min="1" number-max="98" number-digitos="0" number-padrao="50" value="50" /></td>\n                        <td class="label"><label>Perdas</label></td>\n                        <td class="perdas"><input type="text" number number-min="0" number-digitos="0" number-padrao="3" value="3" /></td>\n                    </tr>\n                    <tr>\n                        <td class="label"><label>Multiplicador</label></td>\n                        <td class="multiplicador"><input type="text" number number-min="1,1" number-digitos="1" number-padrao="10" value="10" /></td>\n                        <td class="label"><label>Niveis</label></td>\n                        <td class="niveis"><input type="text" number number-min="1" number-digitos="0" number-padrao="4" value="4" /></td>\n                    </tr>\n                </table>\n                <table>\n                    <tr>\n                        <td class="label"><label>Sequência</label></td>\n                        <td class="sequencia"><input type="text" value="0-1" /></td>\n                    </tr>\n                </table>\n                <div class="divisor"></div>\n                <table class="mitigar">\n                    <tr>\n                        <td>\n                            <div class="checkbox riscoTemporario">\n                                <input type="checkbox" checked />\n                                <span class="label">\n                                    <label>Após perda, risco em</label>\n                                    <input class="risco" type="text" number number-digitos="1" number-min="0,1" number-max="100" number-padrao="10" value="10" />\n                                    <label>por</label>\n                                    <input class="tempo" type="text" number number-digitos="0" number-min="1" maxlength="3" number-padrao="10" value="10" />\n                                    <label>segundos</label>\n                                </span>\n                            </div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <div class="checkbox continuarAoZerar">\n                                <input type="checkbox" checked />\n                                <span class="label">\n                                    <label>Continuar mesmo após zerar.</label>\n                                </span>\n                            </div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <div class="checkbox turboAleatorio">\n                                <input type="checkbox" checked />\n                                <span class="label">\n                                    <label>Usar o turbo aleatoriamente 1 a cada</label>\n                                    <input class="aleatorio" type="text" number number-digitos="0" number-min="10" maxlength="5" number-padrao="1000" value="1000" />\n                                    <label>apostas.</label>\n                                </span>\n                            </div>\n                        </td>\n                    </tr>\n                </table>\n                <div class="turbo">\n                    <button class="btn turbo red">Turbo</button>\n                    <span class="label">\n                        <label>Definir risco em</label>\n                        <input class="risco" type="text" number number-digitos="1" number-min="0,1" number-max="100" number-padrao="100" value="100" />\n                        <label>por</label>\n                        <input class="tempo" type="text" number number-digitos="0" number-min="1" maxlength="3" number-padrao="10" value="10" />\n                        <label>segundos</label>\n                    </span>\n                </div>\n            '.replace("{componenteQuantoArriscar}",Instancia.BotConstrutor.ComponenteQuantoArriscar(Modulo,"html")),js:(container,secaoId)=>{const componenteQuantoArriscar=Instancia.BotConstrutor.ComponenteQuantoArriscar(Modulo,"js");componenteQuantoArriscar instanceof Function&&componenteQuantoArriscar(container,secaoId),Modulo.Objetos.componenteQuantoArriscar$Arriscar.val("0").blur(),Modulo.Objetos.$prediction=container.find('.prediction input[type="text"]'),Modulo.Objetos.prediction=Modulo.Objetos.$prediction.get(0),Modulo.Objetos.$perdas=container.find('.perdas input[type="text"]'),Modulo.Objetos.perdas=Modulo.Objetos.$perdas.get(0),Modulo.Objetos.$multiplicador=container.find('.multiplicador input[type="text"]'),Modulo.Objetos.multiplicador=Modulo.Objetos.$multiplicador.get(0),Modulo.Objetos.$niveis=container.find('.niveis input[type="text"]'),Modulo.Objetos.niveis=Modulo.Objetos.$niveis.get(0),Modulo.Objetos.$sequencia=container.find('.sequencia input[type="text"]'),Modulo.Objetos.$mitigarContinuarAoZerarLabel=container.find(".mitigar .continuarAoZerar span.label"),Modulo.Objetos.icheckbug_mitigarContinuarAoZerar={},Instancia.LuckygamesIo.BugICheckEvent("."+secaoId+' .mitigar .continuarAoZerar input[type="checkbox"]',Modulo.Objetos.icheckbug_mitigarContinuarAoZerar,function(){Modulo.Objetos.$mitigarContinuarAoZerarLabel.css("opacity",this.checked?1:.5),Modulo.Parametros.telaContinuarAoZerar=this.checked}).trigger("ifChanged"),Modulo.Objetos.$turboAleatorio=container.find('.turboAleatorio input[type="text"]'),Modulo.Objetos.$turboAleatorio.blur(function(){Modulo.Parametros.telaTurboAleatorio&&(Modulo.Parametros.telaTurboAleatorio.aleatorio=this.number())}),Modulo.Objetos.$mitigarTurboAleatorioLabel=container.find(".mitigar .turboAleatorio span.label"),Modulo.Objetos.icheckbug_mitigarTurboAleatorio={},Instancia.LuckygamesIo.BugICheckEvent("."+secaoId+' .mitigar .turboAleatorio input[type="checkbox"]',Modulo.Objetos.icheckbug_mitigarTurboAleatorio,function(){Modulo.Objetos.$mitigarTurboAleatorioLabel.css("opacity",this.checked?1:.5),Modulo.Parametros.telaTurboAleatorio=this.checked?{aleatorio:Modulo.Objetos.$turboAleatorio.get(0).number()}:null}).trigger("ifChanged"),Modulo.Objetos.$mitigarRiscoTemporarioRisco=container.find('.mitigar .riscoTemporario input[type="text"].risco'),Modulo.Objetos.$mitigarRiscoTemporarioTempo=container.find('.mitigar .riscoTemporario input[type="text"].tempo'),Modulo.Objetos.$mitigarRiscoTemporarioLabel=container.find(".mitigar .riscoTemporario span.label"),Modulo.Objetos.icheckbug_mitigarRiscoTemporario={},Instancia.LuckygamesIo.BugICheckEvent("."+secaoId+' .mitigar .riscoTemporario input[type="checkbox"]',Modulo.Objetos.icheckbug_mitigarRiscoTemporario,function(){Modulo.Objetos.$mitigarRiscoTemporarioLabel.css("opacity",this.checked?1:.5),Modulo.Parametros.telaRiscoTemporario=this.checked?{risco:Modulo.Objetos.$mitigarRiscoTemporarioRisco.get(0).number(),tempo:Modulo.Objetos.$mitigarRiscoTemporarioTempo.get(0).number()}:null,Modulo.Parametros.telaRiscoTemporario||clearTimeout(Modulo.Parametros.controleRiscoTemporarioTimeout)}).trigger("ifChanged"),Modulo.Objetos.$mitigarRiscoTemporarioRisco.blur(function(){null!==Modulo.Parametros.telaRiscoTemporario&&(Modulo.Parametros.telaRiscoTemporario.risco=this.number())}),Modulo.Objetos.$mitigarRiscoTemporarioTempo.blur(function(){null!==Modulo.Parametros.telaRiscoTemporario&&(Modulo.Parametros.telaRiscoTemporario.tempo=this.number())}),Modulo.Objetos.$turboRiscoTemporarioRisco=container.find('.turbo input[type="text"].risco'),Modulo.Objetos.$turboRiscoTemporarioTempo=container.find('.turbo input[type="text"].tempo'),Modulo.Objetos.$turboButton=container.find(".turbo button"),Modulo.Objetos.$turboButton.click(()=>{Modulo.Parametros.RiscoTemporario(Modulo.Objetos.$turboRiscoTemporarioRisco.get(0).number(),Modulo.Objetos.$turboRiscoTemporarioTempo.get(0).number())}),Modulo.Objetos.$sequencia.blur(function(){let mask=this.value;const numbers=[];if(!/(^[^0-9]|[^0-9\,\-]|[^0-9]$|[^0-9][^0-9])/.test(mask)){let sinal="";for(;mask.length;){let number=mask.replace(/[^0-9]+.*/,"");if(mask=mask.substr(number.length),(number=parseInt(number))>9999&&(number=9999),numbers.length&&numbers[numbers.length-1]>number){numbers.length=0;break}if("-"==sinal)for(let i=numbers[numbers.length-1]+1;i<=number;i++)numbers.push(i);else numbers[numbers.length-1]!=number&&numbers.push(number);sinal=mask.substr(0,1),mask=mask.substr(sinal.length)}}if(0==numbers.length)this.value="0-9999";else{let ultimo;mask="";let aberto=!1;for(let i=0;i<=numbers.length;i++){const number=i<=numbers.length?numbers[i]:void 0;ultimo==number-1?aberto=!0:(aberto&&(aberto=!1,mask+="-"+ultimo),number>=0&&(mask+=(mask?",":"")+numbers[i])),ultimo=numbers[i]}this.value=mask}Modulo.Parametros.telaSequencia=numbers}),Modulo.Objetos.$sequencia.blur()},atualizarExibicao:()=>{const componenteQuantoArriscar=Instancia.BotConstrutor.ComponenteQuantoArriscar(Modulo,"atualizarExibicao");componenteQuantoArriscar instanceof Function&&componenteQuantoArriscar(),Modulo.Parametros.log(),Modulo.Componentes.LigaDesliga.executando||Modulo.Componentes.LigaDesliga.pausado||(Modulo.Parametros.controleBotParado=!0,clearTimeout(Modulo.Parametros.controleRiscoTemporarioTimeout))}},Modulo.Parametros={telaContinuarAoZerar:null,telaSequencia:null,telaRiscoTemporario:null,telaTurboAleatorio:null,andamentoUsuarioSaldoMinimo:null,andamentoUsuarioSaldoMaximo:null,andamentoUsuarioSaldoInicial:null,andamentoUsuarioSaldoArriscado:null,andamentoUsuarioPrediction:null,andamentoUsuarioPredictionMultiplicador:null,andamentoUsuarioPerdas:null,andamentoUsuarioMultiplicador:null,andamentoUsuarioNiveis:null,andamentoApostaUltima:null,andamentoApostaProxima:null,andamentoApostaRecalculo:null,andamentoNivel:null,andamentoPerdas:null,andamentoSaldoEsperado:null,andamento:!1,controleBotParado:!0,controleSaldoInicialTotal:null,controleSaldoInicialArriscado:null,controleGanhoMenor:0,controleGanhoMaior:0,controleGanhoAtual:0,controleZerado:0,controleNivel:"—",controlePerdas:"—",controleTurbos:0,controleMensagem:"",controleRiscoTemporarioTimeout:null,controleRiscoTemporarioRiscoOriginal:null,controleRiscoTemporarioCount:0,log:()=>{let log={Ligado:Modulo.Componentes.LigaDesliga.executando?"Sim":"Não",Zerou:Modulo.Parametros.controleZerado+"x",Nivel:Modulo.Parametros.controleNivel,Perdas:Modulo.Parametros.controlePerdas,"Ganho: menor":"% "+(Modulo.Parametros.controleGanhoMenor>=0?"+":"-")+Math.abs(100*Modulo.Parametros.controleGanhoMenor).toFixed(8),"Ganho: ATUAL":"% "+(Modulo.Parametros.controleGanhoAtual>=0?"+":"-")+Math.abs(100*Modulo.Parametros.controleGanhoAtual).toFixed(8),"Ganho: maior":"% "+(Modulo.Parametros.controleGanhoMaior>=0?"+":"-")+Math.abs(100*Modulo.Parametros.controleGanhoMaior).toFixed(8),"Risco temporário":Modulo.Parametros.controleRiscoTemporarioCount,Turbos:Modulo.Parametros.controleTurbos,Status:Modulo.Parametros.controleMensagem};Modulo.Componentes.LigaDesliga.Log(log)},InicializarBot:()=>{Modulo.Parametros.ParametrosAndamentoInicializar(!1),Modulo.Parametros.controleSaldoInicialTotal=Instancia.LuckygamesIo.Parametros.Balance(),Modulo.Parametros.controleSaldoInicialArriscado=Modulo.Componentes.QuantoArriscar.arriscado,Modulo.Parametros.controleGanhoMenor=0,Modulo.Parametros.controleGanhoMaior=0,Modulo.Parametros.controleGanhoAtual=0,Modulo.Parametros.controleZerado=0,Modulo.Parametros.controleNivel="—",Modulo.Parametros.controlePerdas="—",Modulo.Parametros.controleMensagem="",Modulo.Parametros.controleTurbos=0},ParametrosAndamentoInicializar:(inicializar=!0)=>{Modulo.Objetos.componenteQuantoArriscar$Arriscar.blur(),Modulo.Parametros.andamento=inicializar,Modulo.Parametros.andamentoUsuarioSaldoMinimo=inicializar?Instancia.LuckygamesIo.Parametros.Balance()-Modulo.Componentes.QuantoArriscar.arriscado:null,Modulo.Parametros.andamentoUsuarioSaldoMaximo=inicializar?Modulo.Componentes.QuantoArriscar.meta:null,Modulo.Parametros.andamentoUsuarioSaldoInicial=inicializar?Instancia.LuckygamesIo.Parametros.Balance():null,Modulo.Parametros.andamentoUsuarioSaldoArriscado=inicializar?Modulo.Componentes.QuantoArriscar.arriscado:null,Modulo.Parametros.andamentoUsuarioPrediction=inicializar?Modulo.Objetos.prediction.number():null,Modulo.Parametros.andamentoUsuarioPredictionMultiplicador=inicializar?Instancia.LuckygamesIo.ValoresMultiplicadores["_"+Modulo.Parametros.andamentoUsuarioPrediction]>=1?Instancia.LuckygamesIo.ValoresMultiplicadores["_"+Modulo.Parametros.andamentoUsuarioPrediction]:Instancia.LuckygamesIo.ValoresMultiplicadores["_"+(99-Modulo.Parametros.andamentoUsuarioPrediction)]:null,Modulo.Parametros.andamentoUsuarioPerdas=inicializar?Modulo.Objetos.perdas.number():null,Modulo.Parametros.andamentoUsuarioMultiplicador=inicializar?Modulo.Objetos.multiplicador.number():null,Modulo.Parametros.andamentoUsuarioNiveis=inicializar?Modulo.Objetos.niveis.number():null,Modulo.Parametros.andamentoNivel=inicializar?1:null,Modulo.Parametros.andamentoPerdas=inicializar?0:null,Modulo.Parametros.andamentoApostaUltima=null,Modulo.Parametros.andamentoApostaProxima=inicializar?Modulo.Parametros.andamentoUsuarioSaldoArriscado/Math.pow(Modulo.Parametros.andamentoUsuarioMultiplicador,Modulo.Parametros.andamentoUsuarioNiveis-Modulo.Parametros.andamentoNivel):null,Modulo.Parametros.andamentoApostaRecalculo=inicializar?{}:null,Modulo.Parametros.andamentoSaldoEsperado=inicializar?Modulo.Parametros.andamentoUsuarioSaldoInicial+Modulo.Parametros.andamentoApostaProxima*Modulo.Parametros.andamentoUsuarioPredictionMultiplicador:null},CalcularGanho:()=>{Modulo.Parametros.controleGanhoAtual=Instancia.LuckygamesIo.Parametros.Balance()/Modulo.Parametros.controleSaldoInicialTotal-1,Modulo.Parametros.controleGanhoAtual<Modulo.Parametros.controleGanhoMenor&&(Modulo.Parametros.controleGanhoMenor=Modulo.Parametros.controleGanhoAtual),Modulo.Parametros.controleGanhoAtual>Modulo.Parametros.controleGanhoMaior&&(Modulo.Parametros.controleGanhoMaior=Modulo.Parametros.controleGanhoAtual)},RecalcularApostaAposPerder:()=>{Modulo.Parametros.andamentoApostaUltima=Modulo.Parametros.andamentoApostaProxima,Modulo.Parametros.andamentoPerdas++,(Modulo.Parametros.andamentoApostaRecalculo.nivelSubida=Modulo.Parametros.andamentoPerdas>=Modulo.Parametros.andamentoUsuarioPerdas)?(Modulo.Parametros.andamentoNivel++,Modulo.Parametros.andamentoPerdas=0,Modulo.Parametros.andamentoApostaProxima=Modulo.Parametros.andamentoUsuarioSaldoArriscado/Math.pow(Modulo.Parametros.andamentoUsuarioMultiplicador,Modulo.Parametros.andamentoUsuarioNiveis-Modulo.Parametros.andamentoNivel),Modulo.Parametros.andamentoSaldoEsperado=Instancia.LuckygamesIo.Parametros.Balance()+Modulo.Parametros.andamentoApostaProxima*Modulo.Parametros.andamentoUsuarioPredictionMultiplicador,Modulo.Parametros.controleMensagem="Subiu de nível"):Modulo.Parametros.andamentoApostaProxima=(Modulo.Parametros.andamentoSaldoEsperado-Instancia.LuckygamesIo.Parametros.Balance())/Modulo.Parametros.andamentoUsuarioPredictionMultiplicador,(Modulo.Parametros.andamentoApostaRecalculo.nivelEstouro=Modulo.Parametros.andamentoNivel>Modulo.Parametros.andamentoUsuarioNiveis)&&(Modulo.Parametros.controleMensagem="Perdeu em todos os níveis")},PrepararDadosDoLog:()=>{null!==Modulo.Parametros.andamentoPerdas&&(Modulo.Parametros.controlePerdas=Modulo.Parametros.andamentoPerdas),null!==Modulo.Parametros.andamentoNivel&&(Modulo.Parametros.controleNivel=Modulo.Parametros.andamentoNivel)},PararBot:()=>{Modulo.Componentes.LigaDesliga.executando&&(Modulo.Parametros.controleBotParado=!0,Modulo.Objetos.$controleBtnLigar.click())},RiscoTemporario:(risco=null,tempo=null)=>{var random=()=>1e3*(Math.floor(10*Math.random())+1);if(Modulo.Parametros.telaRiscoTemporario||risco){if(risco&&(0!=Modulo.Parametros.controleRiscoTemporarioCount||Modulo.Parametros.controleRiscoTemporarioTimeout))return void Instancia.Geral.Toast("Turbo não é possível no momento. Espere o Risco Temporário zerar.","warning");if(risco&&(Instancia.Geral.Toast("Turbo ativado.","info"),Modulo.Parametros.controleTurbos++),Modulo.Parametros.controleRiscoTemporarioCount++,Modulo.Parametros.controleRiscoTemporarioTimeout)return;null==Modulo.Parametros.controleRiscoTemporarioRiscoOriginal&&(Modulo.Parametros.controleRiscoTemporarioRiscoOriginal=Modulo.Objetos.componenteQuantoArriscar$Arriscar.get(0).number()),Modulo.Parametros.controleRiscoTemporarioTimeout=setTimeout(()=>{Modulo.Parametros.telaRiscoTemporario&&Modulo.Componentes.LigaDesliga.executando?(Modulo.Objetos.componenteQuantoArriscar$Arriscar.val(null!=risco?risco:Modulo.Parametros.telaRiscoTemporario.risco).blur(),Modulo.Parametros.controleRiscoTemporarioTimeout=setTimeout(()=>{Modulo.Objetos.componenteQuantoArriscar$Arriscar.val(Modulo.Parametros.controleRiscoTemporarioRiscoOriginal).blur(),0==--Modulo.Parametros.controleRiscoTemporarioCount?(Modulo.Parametros.controleRiscoTemporarioRiscoOriginal=null,Modulo.Parametros.controleRiscoTemporarioTimeout=null):Modulo.Parametros.controleRiscoTemporarioTimeout=setTimeout(()=>{Modulo.Parametros.controleRiscoTemporarioTimeout=null,Modulo.Parametros.controleRiscoTemporarioCount--,Modulo.Parametros.RiscoTemporario()},5*random())},1e3*(null!=tempo?tempo:Modulo.Parametros.telaRiscoTemporario.tempo))):Modulo.Parametros.controleRiscoTemporarioTimeout=null},null!=risco?1:random())}},ValidarSaldoMinimoEMaximo:aposta=>null!==Modulo.Parametros.andamentoUsuarioSaldoMaximo&&Instancia.LuckygamesIo.Parametros.Balance()>=Modulo.Parametros.andamentoUsuarioSaldoMaximo?(Modulo.Parametros.controleMensagem="Saldo máximo atingido","max"):Instancia.LuckygamesIo.Parametros.Balance()-aposta.valor<Modulo.Parametros.andamentoUsuarioSaldoMinimo&&(Modulo.Parametros.telaContinuarAoZerar&&Modulo.Parametros.RiscoTemporario(),Modulo.Parametros.controleZerado++,Modulo.Parametros.controleMensagem="Saldo mínimo atingido",window.dispatchEvent(new Event("BotZerou")),"min"),ObterAposta:()=>{Modulo.Parametros.andamento||Modulo.Parametros.ParametrosAndamentoInicializar();const ignorar=Modulo.Parametros.telaSequencia.indexOf(Instancia.Estatisticas.Dados.sequenciaPerdendo)<0;return ignorar&&(Modulo.Parametros.controleMensagem="Ignorando"),{valor:ignorar?1e-8:Modulo.Parametros.andamentoApostaProxima,prediction:Modulo.Parametros.andamentoUsuarioPrediction,direcao:Instancia.LuckygamesIo.ValoresMultiplicadores["_"+Modulo.Parametros.andamentoUsuarioPrediction]>=1?"over":"under",ignorar:ignorar}},TurboAleatorio:()=>{if(!Modulo.Parametros.telaTurboAleatorio)return;const random=(min,max)=>Math.floor(Math.random()*(max-min+1))+min;random(1,Modulo.Parametros.telaTurboAleatorio.aleatorio)==parseInt(Modulo.Parametros.telaTurboAleatorio.aleatorio/2)&&Modulo.Objetos.$turboButton.click()},Processar:()=>(Modulo.Parametros.TurboAleatorio(),new Promise(resolve=>{Modulo.Parametros.controleBotParado&&(Modulo.Parametros.controleBotParado=!1,Modulo.Parametros.InicializarBot());let aposta=Modulo.Parametros.ObterAposta(),limite;if(limite=Modulo.Parametros.ValidarSaldoMinimoEMaximo(aposta)){if("min"!=limite||!Modulo.Parametros.telaContinuarAoZerar)return Modulo.Parametros.PararBot(),resolve(!0);Modulo.Parametros.ParametrosAndamentoInicializar(!1),aposta=Modulo.Parametros.ObterAposta()}Instancia.LuckygamesIo.Apostar(aposta.valor,aposta.direcao,aposta.prediction).then(response=>{if(aposta.ignorar)return resolve(!1);const venceu="win"==response.gameResult;let estourou=!1;Modulo.Parametros.CalcularGanho(),venceu?(Modulo.Parametros.ParametrosAndamentoInicializar(!1),Modulo.Parametros.controleMensagem="Venceu"):(Modulo.Parametros.RecalcularApostaAposPerder(),(estourou=Modulo.Parametros.andamentoApostaRecalculo.nivelEstouro&&!Modulo.Parametros.telaContinuarAoZerar)&&Modulo.Parametros.PararBot()),Modulo.Parametros.PrepararDadosDoLog(),resolve(venceu||estourou)}).catch(error=>{console.log("catch",{parametros:Modulo.Parametros,aposta:aposta,error:error}),setTimeout(()=>{console.log("Recomeçando..."),Modulo.Objetos.$controleBtnPausar.click()},1e4)})}))}});